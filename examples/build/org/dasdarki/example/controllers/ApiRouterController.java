package org.dasdarki.example.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

/**
 * This class was generated by YmirScript. Do not edit it manually.
 */
@RestController
@RequestMapping("/api")
public class ApiRouterController {

    @Autowired private ApiRouterControllerHandler handler;

    private ApiKeyAuthenticator authenticator;

    @RequestMapping("/v2/hello-from-another-file", method = RequestMethod.GET)
    public Object getV2HelloRouteAnotherFile(@RequestHeader("ApiKey") String apiKey) {
        if (apiKey == null || !this.authenticator.authenticate(apiKey)) {
            throw new org.springframework.web.server.ResponseStatusException(org.springframework.http.HttpStatus.UNAUTHORIZED, "You are not authorized to access this resource!");
        }
        if (!this.authenticator.authorize(apiKey, new String[] { "admin" })) {
            throw new org.springframework.web.server.ResponseStatusException(org.springframework.http.HttpStatus.FORBIDDEN, "You are not authorized to access this resource!");
        }
        return this.handler.handleV2HelloRouteAnotherFile();
    }

    @RequestMapping("/hello", method = RequestMethod.GET)
    public Object getHelloRoute(@RequestHeader("ApiKey") String apiKey) {
        if (apiKey == null || !this.authenticator.authenticate(apiKey)) {
            throw new org.springframework.web.server.ResponseStatusException(org.springframework.http.HttpStatus.UNAUTHORIZED, "You are not authorized to access this resource!");
        }
        if (!this.authenticator.authorize(apiKey, new String[] { "admin" })) {
            throw new org.springframework.web.server.ResponseStatusException(org.springframework.http.HttpStatus.FORBIDDEN, "You are not authorized to access this resource!");
        }
        return this.handler.handleHelloRoute();
    }

    @RequestMapping("/person", method = RequestMethod.POST)
    public Object postCreatePerson(@RequestHeader("ApiKey") String apiKey) {
        if (apiKey == null || !this.authenticator.authenticate(apiKey)) {
            throw new org.springframework.web.server.ResponseStatusException(org.springframework.http.HttpStatus.UNAUTHORIZED, "You are not authorized to access this resource!");
        }
        if (!this.authenticator.authorize(apiKey, new String[] { "admin" })) {
            throw new org.springframework.web.server.ResponseStatusException(org.springframework.http.HttpStatus.FORBIDDEN, "You are not authorized to access this resource!");
        }
        return this.handler.handleCreatePerson();
    }

}
